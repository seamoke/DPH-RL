{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['DO', 'AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['English', 'Dutch']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the country codes for countries that do not speak English.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the first names of all players, and their total ranking points?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the number of cars with more than 4 cylinders?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many distinct countries do players come from?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT count(DISTINCT country_code) FROM players", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many flights depart from City Aberdeen?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Virginia', 'Wisconsin']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the first names of owners living in Virginia and the names of dogs they own.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE AREA_CODE_STATE (\n    area_code number, -- example: [201, 202]\n    state text, -- example: ['NJ', 'DC']\n    PRIMARY KEY (area_code)\n);\n\nCREATE TABLE CONTESTANTS (\n    contestant_number number, -- example: [1, 2]\n    contestant_name text, -- example: ['Edwina Burnam', 'Tabatha Gehling']\n    PRIMARY KEY (contestant_number)\n);\n\nCREATE TABLE VOTES (\n    vote_id number, -- example: [5, 3]\n    phone_number number, -- example: [5112677315, 6209222712]\n    state text, -- example: ['NY', 'CA']\n    contestant_number number, -- example: [2, 3]\n    created time, -- example: ['2018-03-09 19:03:21', '2018-03-09 19:03:36']\n    PRIMARY KEY (vote_id),\n    CONSTRAINT fk_votes_state FOREIGN KEY (state) REFERENCES AREA_CODE_STATE (state),\n    CONSTRAINT fk_votes_contestant_number FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS (contestant_number)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the area code in which the most voters voted?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "voter_1/voter_1.sqlite", "gold_sql": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE AREA_CODE_STATE (\n    area_code number, -- example: [201, 202]\n    state text, -- example: ['ID', 'NJ', 'DC']\n    PRIMARY KEY (area_code)\n);\n\nCREATE TABLE CONTESTANTS (\n    contestant_number number, -- example: [1, 2]\n    contestant_name text, -- example: ['Edwina Burnam', 'Tabatha Gehling']\n    PRIMARY KEY (contestant_number)\n);\n\nCREATE TABLE VOTES (\n    vote_id number, -- example: [5, 3]\n    phone_number number, -- example: [5112677315, 6209222712]\n    state text, -- example: ['NY', 'CA']\n    contestant_number number, -- example: [2, 3]\n    created time, -- example: ['2018-03-09 19:03:21', '2018-03-09 19:03:36']\n    PRIMARY KEY (vote_id),\n    CONSTRAINT fk_votes_state FOREIGN KEY (state) REFERENCES AREA_CODE_STATE (state),\n    CONSTRAINT fk_votes_contestant_number FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS (contestant_number)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the vote ids, phone numbers and states of all votes.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "voter_1/voter_1.sqlite", "gold_sql": "SELECT vote_id ,  phone_number ,  state FROM votes", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Chinese', 'Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich unique cities are in Asian countries where Chinese is the official language ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nPlease show the most common citizenship of singers.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['AD', 'PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the template type description of the template type with the code AD.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the average weight for each type of pet?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the semester which most student registered in? Show both the name and the id.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the average earnings of poker players with height higher than 200?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the best rank of losers across all matches?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT min(loser_rank) FROM matches", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['North America', 'Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nGive the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names and ids of every course with less than 2 sections?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich city is the most frequent source airport?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the cost and treatment type description of each treatment?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the date of each treatment, together with the first name of the professional who operated it.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich template type code is used by most number of documents?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['france', 'usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many car makers are there in france?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the names of singers and the total sales of their songs.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many car makers are there in each continents? List the continent name and the count.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the number of concerts happened in the stadium with the highest capacity .\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many high schoolers are there?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT count(*) FROM Highschooler", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList all song names by singers above the average age.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the document id with least number of paragraphs?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE battle (\n    id number, -- example: [1, 2]\n    name text, -- example: ['Battle of Adrianople', 'Battle of Serres']\n    `date` text, -- example: ['14 April 1205', 'June 1205']\n    bulgarian_commander text, -- example: ['Kaloyan', 'Unknown']\n    latin_commander text, -- example: ['Baldwin I', 'Unknown']\n    result text, -- example: ['Bulgarian victory', 'Latin victory']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE ship (\n    lost_in_battle number, -- example: [8, 7]\n    id number, -- example: [1, 2]\n    name text, -- example: ['Lettice', 'Bon Accord']\n    tonnage text, -- example: ['t', '391']\n    ship_type text, -- example: ['Brig', '18-gun Brig']\n    location text, -- example: ['English Channel', 'SW Approaches']\n    disposition_of_ship text, -- example: ['Captured', 'Wrecked']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_ship_lost_in_battle FOREIGN KEY (lost_in_battle) REFERENCES battle (id)\n);\n\nCREATE TABLE death (\n    caused_by_ship_id number, -- example: [1, 2]\n    id number, -- example: [1, 2]\n    note text, -- example: ['Dantewada, Chhattisgarh', 'Erraboru, Chhattisgarh']\n    killed number, -- example: [8, 3]\n    injured number, -- example: [0, 9]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_death_caused_by_ship_id FOREIGN KEY (caused_by_ship_id) REFERENCES ship (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the notes of the death events which has substring 'East'?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "battle_death/battle_death.sqlite", "gold_sql": "SELECT note FROM death WHERE note LIKE '%East%'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the section_name in reversed lexicographical order.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT section_name FROM Sections ORDER BY section_name DESC", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['English', 'Dutch']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many countries speak both English and Dutch?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nGive the code of the airport with the least flights.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE course (\n    Course_ID number, -- example: [1, 2]\n    Staring_Date text, -- example: ['5 May', '6 May']\n    Course text, -- example: ['Language Arts', 'Math']\n    PRIMARY KEY (Course_ID)\n);\n\nCREATE TABLE teacher (\n    Teacher_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joseph Huts', 'Gustaaf Deloor']\n    Age text, -- example: ['32', '29']\n    Hometown text, -- example: ['Blackrod Urban District', 'Bolton County Borough']\n    PRIMARY KEY (Teacher_ID)\n);\n\nCREATE TABLE course_arrange (\n    Course_ID number, -- example: [2, 3]\n    Teacher_ID number, -- example: [5, 3]\n    Grade number, -- example: [1, 3]\n    PRIMARY KEY (Course_ID),\n    CONSTRAINT fk_course_arrange_course_id FOREIGN KEY (Course_ID) REFERENCES course (Course_ID),\n    CONSTRAINT fk_course_arrange_teacher_id FOREIGN KEY (Teacher_ID) REFERENCES teacher (Teacher_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow different hometown of teachers and the number of teachers from each hometown.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "course_teach/course_teach.sqlite", "gold_sql": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE museum (\n    Museum_ID number, -- example: [1, 2]\n    Name text, -- example: ['Plaza Museum', 'Capital Plaza Museum']\n    Num_of_Staff number, -- example: [62, 25]\n    Open_Year text, -- example: ['2000', '2012']\n    PRIMARY KEY (Museum_ID)\n);\n\nCREATE TABLE visitor (\n    ID number, -- customer id, example: [1, 2]\n    Name text, -- example: ['Gonzalo Higuaín ', 'Guti Midfielder']\n    Level_of_membership number, -- example: [8, 5]\n    Age number, -- example: [35, 28]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE visit (\n    Museum_ID number, -- example: [1, 2]\n    visitor_ID text, -- customer id, example: ['5', '3']\n    Num_of_Ticket number, -- example: [20, 4]\n    Total_spent number, -- example: [320.14, 89.98]\n    PRIMARY KEY (Museum_ID),\n    CONSTRAINT fk_visit_museum_id FOREIGN KEY (Museum_ID) REFERENCES museum (Museum_ID),\n    CONSTRAINT fk_visit_visitor_id FOREIGN KEY (visitor_ID) REFERENCES visitor (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "museum_visit/museum_visit.sqlite", "gold_sql": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the code of airport that has the highest number of flights?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Angola', 'Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Angola', 'Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat region does Angola belong to and what is its population?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList each language and the number of TV Channels using it.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow all template type codes and descriptions.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the name of the singer who is worth the most?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the content of TV Channel with serial name \"Sky Radio\"?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of the nations with the 3 lowest populations?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['Europe', 'Asia', 'North America']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the total surface area of the continents Asia and Europe?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the citizenship shared by singers with birth year before 1945 and after 1955.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE AREA_CODE_STATE (\n    area_code number, -- example: [201, 202]\n    state text, -- example: ['NJ', 'DC']\n    PRIMARY KEY (area_code)\n);\n\nCREATE TABLE CONTESTANTS (\n    contestant_number number, -- example: [1, 2]\n    contestant_name text, -- example: ['Edwina Burnam', 'Tabatha Gehling']\n    PRIMARY KEY (contestant_number)\n);\n\nCREATE TABLE VOTES (\n    vote_id number, -- example: [5, 3]\n    phone_number number, -- example: [5112677315, 6209222712]\n    state text, -- example: ['NY', 'CA']\n    contestant_number number, -- example: [2, 3]\n    created time, -- example: ['2018-03-09 19:03:21', '2018-03-09 19:03:36']\n    PRIMARY KEY (vote_id),\n    CONSTRAINT fk_votes_state FOREIGN KEY (state) REFERENCES AREA_CODE_STATE (state),\n    CONSTRAINT fk_votes_contestant_number FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS (contestant_number)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the distinct states and create time of all votes?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "voter_1/voter_1.sqlite", "gold_sql": "SELECT DISTINCT state ,  created FROM votes", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names and ranks of the three youngest winners across all matches?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['CVO', 'APG', 'AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' CVO', ' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' CVO', ' APG', ' ASY']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich airlines have departing flights from both APG and CVO airports?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nlist all cartoon titles and their directors ordered by their air date\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the first, middle, and last name of the first student to register?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Haiti', 'Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the average horsepower of the cars before 1980?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Kyle', 'Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many likes does Kyle have?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind all airlines that have fewer than 200 flights.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many unique languages are spoken in the world?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow names of people whose nationality is not \"Russia\".\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nAmong the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the program id and the summary of the degree that has the most students enrolled?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of high schoolers who both have friends and are liked?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the names of conductors that do not have the nationality \"USA\".\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the name of the shop that is hiring the largest number of employees?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the birth date of the poker player with the lowest earnings?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the grade that has the greatest number of high schoolers.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow name, country, age for all singers ordered by age from the oldest to the youngest.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Live final', 'Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the maximum and minimum share of performances whose type is not \"Live final\".\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the names and birth dates of people in ascending alphabetical order of name.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many poker players are there?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT count(*) FROM poker_player", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the ids of the TV channels that do not have any cartoons directed by Ben Jones?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names, countries, and ages for every singer in descending order of age?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow all distinct template type codes for all templates.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT DISTINCT template_type_code FROM Templates", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Spanish', 'Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the total number of countries where Spanish is spoken by the largest percentage of people?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many different types of pet are there?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT count(DISTINCT pettype) FROM pets", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the official language spoken in the country whose head of state is Beatrix?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nGive the language that is spoken in the most countries.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the code of the template type that is most commonly used in documents.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the date and id of the transcript with at least 2 courses listed?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat type of pet is the youngest animal, and how much does it weigh?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhen did the episode \"A Love of a Lifetime\" air?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the number of concerts that occurred in the stadium with the largest capacity ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nAmong the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the first name of all the professionals along with the description of the treatment they have done.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich template type code has most number of templates?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the production code and channel of the most recently aired cartoon .\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "select production_code ,  channel from cartoon order by original_air_date desc limit 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich cities do more than one employee under age 30 come from?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE course (\n    Course_ID number, -- example: [1, 2]\n    Staring_Date text, -- example: ['5 May', '6 May']\n    Course text, -- example: ['Language Arts', 'Math']\n    PRIMARY KEY (Course_ID)\n);\n\nCREATE TABLE teacher (\n    Teacher_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joseph Huts', 'Gustaaf Deloor']\n    Age text, -- example: ['32', '29']\n    Hometown text, -- example: ['Blackrod Urban District', 'Bolton County Borough']\n    PRIMARY KEY (Teacher_ID)\n);\n\nCREATE TABLE course_arrange (\n    Course_ID number, -- example: [2, 3]\n    Teacher_ID number, -- example: [5, 3]\n    Grade number, -- example: [1, 3]\n    PRIMARY KEY (Course_ID),\n    CONSTRAINT fk_course_arrange_course_id FOREIGN KEY (Course_ID) REFERENCES course (Course_ID),\n    CONSTRAINT fk_course_arrange_teacher_id FOREIGN KEY (Teacher_ID) REFERENCES teacher (Teacher_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the towns from which at least two teachers come from?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "course_teach/course_teach.sqlite", "gold_sql": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are years of founding for orchestras that have had more than a single performance?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['PPT', 'PP', 'AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PPT', 'PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the ids of templates with template type code PP or PPT?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the nationalities that are shared by at least two people?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat's the name of the course with most number of enrollments?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['APG', 'AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' APG', ' ASY']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nGive the flight numbers of flights landing at APG.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Date', 'Ha', 'Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the first name, country code and birth date of the winner who has the highest rank points in all matches.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Hande', 'Martina', 'Mirjana']\n    last_name text, -- example: ['Hande', 'Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the number of left handed winners who participated in the WTA Championships.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['Australian Open', 'WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the name of the winner with the most rank points who participated in the Australian Open tournament?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Alton ', 'Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Alton ', 'Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich city and country is the Alton airport at?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the minimum weight of the car with 8 cylinders produced in 1974 ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['Africa', 'North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many different forms of governments are there in Africa?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the id of the pet owned by the student whose last name is 'Smith'?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['US', 'AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['English', 'Dutch']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the city with the largest population that uses English.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the first name and gender of student who have more than one pet.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the maximum accelerate for different number of cylinders?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many airlines are from USA?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['h', 'a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nDescribe the section h.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Feature_Types (\n    feature_type_code text, -- example: ['Amenity', 'Security']\n    feature_type_name text, -- example: ['Amenity, eg Pool.', 'Securiyt, eg Burglar Alarm.']\n    PRIMARY KEY (feature_type_code)\n);\n\nCREATE TABLE Ref_Property_Types (\n    property_type_code text, -- example: ['Apartment', 'Field']\n    property_type_description text, -- example: ['House, Bungalow, etc.', 'Apartment, Flat, Condo, etc.']\n    PRIMARY KEY (property_type_code)\n);\n\nCREATE TABLE Other_Available_Features (\n    feature_id number, -- example: [2, 3]\n    feature_type_code text, -- example: ['Amenity', 'Security']\n    feature_name text, -- example: ['AirCon', 'Pool']\n    feature_description text, -- example: ['Air Conditioning.', 'Swimming Pool.']\n    PRIMARY KEY (feature_id),\n    CONSTRAINT fk_other_available_features_feature_type_code FOREIGN KEY (feature_type_code) REFERENCES Ref_Feature_Types (feature_type_code)\n);\n\nCREATE TABLE Properties (\n    property_id number, -- example: [1, 2]\n    property_type_code text, -- example: ['House', 'Other']\n    date_on_market time, -- example: ['1991-06-21 23:52:10', '1990-05-25 23:01:51']\n    date_sold time, -- example: ['1979-05-13 16:58:06', '1990-11-14 19:16:38']\n    property_name text, -- example: ['park', 'the cole']\n    property_address text, -- example: ['4745 Emerson Stravenue Suite 829\\nSouth G', '098 Tremaine Highway Suite 569\\nSouth Wil']\n    room_count number, -- example: [7, 1]\n    vendor_requested_price number, -- example: [372652.2909, 661536468.4429]\n    buyer_offered_price number, -- example: [1.68, 8.7122]\n    agreed_selling_price number, -- example: [4201.8, 21769471.8328]\n    apt_feature_1 text, -- example: ['aut', 'est']\n    apt_feature_2 text, -- example: ['suscipit', 'est']\n    apt_feature_3 text,\n    fld_feature_1 text,\n    fld_feature_2 text,\n    fld_feature_3 text,\n    hse_feature_1 text,\n    hse_feature_2 text,\n    hse_feature_3 text,\n    oth_feature_1 text,\n    oth_feature_2 text,\n    oth_feature_3 text,\n    shp_feature_1 text,\n    shp_feature_2 text,\n    shp_feature_3 text,\n    other_property_details text,\n    PRIMARY KEY (property_id),\n    CONSTRAINT fk_properties_property_type_code FOREIGN KEY (property_type_code) REFERENCES Ref_Property_Types (property_type_code)\n);\n\nCREATE TABLE Other_Property_Features (\n    property_id number, -- example: [15, 12]\n    feature_id number, -- example: [3, 4]\n    property_feature_description text, -- example: ['dolorem', 'earum']\n    CONSTRAINT fk_other_property_features_property_id FOREIGN KEY (property_id) REFERENCES Properties (property_id),\n    CONSTRAINT fk_other_property_features_feature_id FOREIGN KEY (feature_id) REFERENCES Other_Available_Features (feature_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many available features are there in total?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "real_estate_properties/real_estate_properties.sqlite", "gold_sql": "SELECT count(*) FROM Other_Available_Features", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the distinct template type descriptions for the templates ever used by any document?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the number of employees from each city?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT count(*) ,  city FROM employee GROUP BY city", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Brazil', 'Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nGive me Brazil’s population and life expectancies.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the record companies of orchestras in descending order of years in which they were founded?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Virginia', 'Wisconsin']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE battle (\n    id number, -- example: [1, 2]\n    name text, -- example: ['Battle of Adrianople', 'Battle of Serres']\n    `date` text, -- example: ['14 April 1205', 'June 1205']\n    bulgarian_commander text, -- example: ['Kaloyan', 'Unknown']\n    latin_commander text, -- example: ['Baldwin I', 'Unknown']\n    result text, -- example: ['Bulgarian victory', 'Latin victory']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE ship (\n    lost_in_battle number, -- example: [8, 7]\n    id number, -- example: [1, 2]\n    name text, -- example: ['Lettice', 'Bon Accord']\n    tonnage text, -- example: ['t', '391']\n    ship_type text, -- example: ['Brig', '18-gun Brig']\n    location text, -- example: ['English Channel', 'SW Approaches']\n    disposition_of_ship text, -- example: ['Captured', 'Wrecked']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_ship_lost_in_battle FOREIGN KEY (lost_in_battle) REFERENCES battle (id)\n);\n\nCREATE TABLE death (\n    caused_by_ship_id number, -- example: [1, 2]\n    id number, -- example: [1, 2]\n    note text, -- example: ['Dantewada, Chhattisgarh', 'Erraboru, Chhattisgarh']\n    killed number, -- example: [8, 3]\n    injured number, -- example: [0, 9]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_death_caused_by_ship_id FOREIGN KEY (caused_by_ship_id) REFERENCES ship (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the name, date and result of each battle.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "battle_death/battle_death.sqlite", "gold_sql": "SELECT name ,  date FROM battle", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the earnings of poker players, ordered descending by value?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Caribbean', 'Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the total surface area of the countries in the Caribbean region?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the name of the semester with no students enrolled?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the names of cities that have a population between 160000 and 900000 .\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "select name from city where population between 160000 and 900000", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow much does the most expensive charge type costs?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT max(charge_amount) FROM Charges", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE museum (\n    Museum_ID number, -- example: [1, 2]\n    Name text, -- example: ['Plaza Museum', 'Capital Plaza Museum']\n    Num_of_Staff number, -- example: [62, 25]\n    Open_Year text, -- example: ['2000', '2012']\n    PRIMARY KEY (Museum_ID)\n);\n\nCREATE TABLE visitor (\n    ID number, -- customer id, example: [1, 2]\n    Name text, -- example: ['Gonzalo Higuaín ', 'Guti Midfielder']\n    Level_of_membership number, -- example: [8, 5]\n    Age number, -- example: [35, 28]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE visit (\n    Museum_ID number, -- example: [1, 2]\n    visitor_ID text, -- customer id, example: ['5', '3']\n    Num_of_Ticket number, -- example: [20, 4]\n    Total_spent number, -- example: [320.14, 89.98]\n    PRIMARY KEY (Museum_ID),\n    CONSTRAINT fk_visit_museum_id FOREIGN KEY (Museum_ID) REFERENCES museum (Museum_ID),\n    CONSTRAINT fk_visit_visitor_id FOREIGN KEY (visitor_ID) REFERENCES visitor (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the id and name of the museum visited most times?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "museum_visit/museum_visit.sqlite", "gold_sql": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nSort all the shops by number products in descending order, and return the name, location and district of each shop.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are each owner's first name, last name, and the size of their dog?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nCount the number of documents.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT count(*) FROM Documents", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the names of all high schoolers in grade 10.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT name FROM Highschooler WHERE grade  =  10", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Brazil', 'Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the population and life expectancies in Brazil?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Date', 'Last', 'Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the first and last name of all players in the order of birth date.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Bachelor', 'Master']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the first, middle, and last names for everybody enrolled in a Bachelors program?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the name of the breed with the most dogs?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nCount the number of employees\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT count(*) FROM employee", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Spanish', 'Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the codes of countries for which Spanish is the predominantly spoken language.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['US Territory', 'Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['US', 'AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nGive the mean GNP and total population of nations which are considered US territory.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are all the possible breed type and size type combinations?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['fiat', 'amc', 'volkswagen']\n    FullName text, -- example: ['Fiat', 'American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['fiat', 'amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['fiat', 'chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many different nationalities do conductors have?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT count(DISTINCT Nationality) FROM conductor", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the stadium name and capacity with most number of concerts in year 2014 or after.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Book', 'Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the type code of the template type with the description \"Book\".\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE battle (\n    id number, -- example: [1, 2]\n    name text, -- example: ['Battle of Adrianople', 'Battle of Serres']\n    `date` text, -- example: ['14 April 1205', 'June 1205']\n    bulgarian_commander text, -- example: ['Kaloyan', 'Unknown']\n    latin_commander text, -- example: ['Baldwin I', 'Unknown']\n    result text, -- example: ['Bulgarian victory', 'Latin victory']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE ship (\n    lost_in_battle number, -- example: [8, 7]\n    id number, -- example: [1, 2]\n    name text, -- example: ['Lettice', 'Bon Accord']\n    tonnage text, -- example: ['t', '391']\n    ship_type text, -- example: ['Brig', '18-gun Brig']\n    location text, -- example: ['English Channel', 'SW Approaches']\n    disposition_of_ship text, -- example: ['Captured', 'Wrecked']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_ship_lost_in_battle FOREIGN KEY (lost_in_battle) REFERENCES battle (id)\n);\n\nCREATE TABLE death (\n    caused_by_ship_id number, -- example: [1, 2]\n    id number, -- example: [1, 2]\n    note text, -- example: ['Dantewada, Chhattisgarh', 'Erraboru, Chhattisgarh']\n    killed number, -- example: [8, 3]\n    injured number, -- example: [0, 9]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_death_caused_by_ship_id FOREIGN KEY (caused_by_ship_id) REFERENCES ship (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the different ids and names of the battles that lost any 'Brig' type shipes?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "battle_death/battle_death.sqlite", "gold_sql": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Joseph Kuhr', 'Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many cartoons were written by \"Joseph Kuhr\"?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich language is the most popular in Aruba?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AHD', 'AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many 'United Airlines' flights depart from Airport 'AHD'?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nGive the names of the nations that were founded after 1950.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Name FROM country WHERE IndepYear  >  1950", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE AREA_CODE_STATE (\n    area_code number, -- example: [201, 202]\n    state text, -- example: ['AL', 'NJ', 'DC']\n    PRIMARY KEY (area_code)\n);\n\nCREATE TABLE CONTESTANTS (\n    contestant_number number, -- example: [1, 2]\n    contestant_name text, -- example: ['Edwina Burnam', 'Tabatha Gehling']\n    PRIMARY KEY (contestant_number)\n);\n\nCREATE TABLE VOTES (\n    vote_id number, -- example: [5, 3]\n    phone_number number, -- example: [5112677315, 6209222712]\n    state text, -- example: ['NY', 'CA']\n    contestant_number number, -- example: [2, 3]\n    created time, -- example: ['2018-03-09 19:03:21', '2018-03-09 19:03:36']\n    PRIMARY KEY (vote_id),\n    CONSTRAINT fk_votes_state FOREIGN KEY (state) REFERENCES AREA_CODE_STATE (state),\n    CONSTRAINT fk_votes_contestant_number FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS (contestant_number)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the names of the contestants whose names contain the substring 'Al' .\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "voter_1/voter_1.sqlite", "gold_sql": "select contestant_name from contestants where contestant_name like \"%al%\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE museum (\n    Museum_ID number, -- example: [1, 2]\n    Name text, -- example: ['Plaza Museum', 'Capital Plaza Museum']\n    Num_of_Staff number, -- example: [62, 25]\n    Open_Year text, -- example: ['2000', '2012']\n    PRIMARY KEY (Museum_ID)\n);\n\nCREATE TABLE visitor (\n    ID number, -- customer id, example: [1, 2]\n    Name text, -- example: ['Gonzalo Higuaín ', 'Guti Midfielder']\n    Level_of_membership number, -- example: [8, 5]\n    Age number, -- example: [35, 28]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE visit (\n    Museum_ID number, -- example: [1, 2]\n    visitor_ID text, -- customer id, example: ['5', '3']\n    Num_of_Ticket number, -- example: [20, 4]\n    Total_spent number, -- example: [320.14, 89.98]\n    PRIMARY KEY (Museum_ID),\n    CONSTRAINT fk_visit_museum_id FOREIGN KEY (Museum_ID) REFERENCES museum (Museum_ID),\n    CONSTRAINT fk_visit_visitor_id FOREIGN KEY (visitor_ID) REFERENCES visitor (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the total ticket expense of the visitors whose membership level is 1?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "museum_visit/museum_visit.sqlite", "gold_sql": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich professionals have done at least two treatments? List the professional's id, role, and first name.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the abbreviation of the airilne has the fewest flights and what country is it in?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the government form name and total population for each government form whose average life expectancy is longer than 72.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nwhat are the different names of the singers that have sales more than 300000?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Afghanistan', 'Aruba']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many official languages does Afghanistan have?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE museum (\n    Museum_ID number, -- example: [1, 2]\n    Name text, -- example: ['Plaza Museum', 'Capital Plaza Museum']\n    Num_of_Staff number, -- example: [62, 25]\n    Open_Year text, -- example: ['2000', '2012']\n    PRIMARY KEY (Museum_ID)\n);\n\nCREATE TABLE visitor (\n    ID number, -- customer id, example: [1, 2]\n    Name text, -- example: ['Gonzalo Higuaín ', 'Guti Midfielder']\n    Level_of_membership number, -- example: [8, 5]\n    Age number, -- example: [35, 28]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE visit (\n    Museum_ID number, -- example: [1, 2]\n    visitor_ID text, -- customer id, example: ['5', '3']\n    Num_of_Ticket number, -- example: [20, 4]\n    Total_spent number, -- example: [320.14, 89.98]\n    PRIMARY KEY (Museum_ID),\n    CONSTRAINT fk_visit_museum_id FOREIGN KEY (Museum_ID) REFERENCES museum (Museum_ID),\n    CONSTRAINT fk_visit_visitor_id FOREIGN KEY (visitor_ID) REFERENCES visitor (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nfind the names of museums which have more staff than the minimum staff number of all museums opened after 2010.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "museum_visit/museum_visit.sqlite", "gold_sql": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many car models are produced in the usa?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the average grade of all students who have some friends.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow different citizenship of singers and the number of singers of each citizenship.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['US', 'AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the official language used in the country the name of whose head of state is Beatrix.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFor each citizenship, what is the maximum net worth?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Spanish', 'Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nCount the number of countries for which Spanish is the predominantly spoken language.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the cities whose population is between 160000 and 900000?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE course (\n    Course_ID number, -- example: [1, 2]\n    Staring_Date text, -- example: ['5 May', '6 May']\n    Course text, -- example: ['Language Arts', 'Math']\n    PRIMARY KEY (Course_ID)\n);\n\nCREATE TABLE teacher (\n    Teacher_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joseph Huts', 'Gustaaf Deloor']\n    Age text, -- example: ['32', '29']\n    Hometown text, -- example: ['Blackrod Urban District', 'Bolton County Borough']\n    PRIMARY KEY (Teacher_ID)\n);\n\nCREATE TABLE course_arrange (\n    Course_ID number, -- example: [2, 3]\n    Teacher_ID number, -- example: [5, 3]\n    Grade number, -- example: [1, 3]\n    PRIMARY KEY (Course_ID),\n    CONSTRAINT fk_course_arrange_course_id FOREIGN KEY (Course_ID) REFERENCES course (Course_ID),\n    CONSTRAINT fk_course_arrange_teacher_id FOREIGN KEY (Teacher_ID) REFERENCES teacher (Teacher_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow names of teachers and the number of courses they teach.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "course_teach/course_teach.sqlite", "gold_sql": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the package choice and series name of the TV channel that has high definition TV.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are all of the episodes ordered by ratings?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT Episode FROM TV_series ORDER BY rating", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Date', 'Tour', 'Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many total tours were there for each ranking date?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'chevrolet', 'buick']\n    Make text, -- example: ['amc hornet sportabout (sw)', 'amc hornet', 'chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow much does the car accelerate that makes amc hornet sportabout (sw)?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names and grades for each high schooler?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT name ,  grade FROM Highschooler", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Kyle', 'Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the ID of the high schooler named Kyle.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE battle (\n    id number, -- example: [1, 2]\n    name text, -- example: ['Battle of Adrianople', 'Battle of Serres']\n    `date` text, -- example: ['14 April 1205', 'June 1205']\n    bulgarian_commander text, -- example: ['Kaloyan', 'Unknown']\n    latin_commander text, -- example: ['Baldwin I', 'Unknown']\n    result text, -- example: ['Bulgarian victory', 'Latin victory']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE ship (\n    lost_in_battle number, -- example: [8, 7]\n    id number, -- example: [1, 2]\n    name text, -- example: ['HMS Atalanta', 'Lettice', 'Bon Accord']\n    tonnage text, -- example: ['t', '391']\n    ship_type text, -- example: ['Brig', '18-gun Brig']\n    location text, -- example: ['English Channel', 'SW Approaches']\n    disposition_of_ship text, -- example: ['Captured', 'Wrecked']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_ship_lost_in_battle FOREIGN KEY (lost_in_battle) REFERENCES battle (id)\n);\n\nCREATE TABLE death (\n    caused_by_ship_id number, -- example: [1, 2]\n    id number, -- example: [1, 2]\n    note text, -- example: ['Dantewada, Chhattisgarh', 'Erraboru, Chhattisgarh']\n    killed number, -- example: [8, 3]\n    injured number, -- example: [0, 9]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_death_caused_by_ship_id FOREIGN KEY (caused_by_ship_id) REFERENCES ship (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "battle_death/battle_death.sqlite", "gold_sql": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the title of all cartoons in alphabetical order.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT Title FROM Cartoon ORDER BY title", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat model has the most different versions?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the owner id, first name and last name of the owner who has the most dogs.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich airline has abbreviation 'UAL'?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE course (\n    Course_ID number, -- example: [1, 2]\n    Staring_Date text, -- example: ['5 May', '6 May']\n    Course text, -- example: ['Language Arts', 'Math']\n    PRIMARY KEY (Course_ID)\n);\n\nCREATE TABLE teacher (\n    Teacher_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joseph Huts', 'Gustaaf Deloor']\n    Age text, -- example: ['32', '29']\n    Hometown text, -- example: ['Blackrod Urban District', 'Bolton County Borough']\n    PRIMARY KEY (Teacher_ID)\n);\n\nCREATE TABLE course_arrange (\n    Course_ID number, -- example: [2, 3]\n    Teacher_ID number, -- example: [5, 3]\n    Grade number, -- example: [1, 3]\n    PRIMARY KEY (Course_ID),\n    CONSTRAINT fk_course_arrange_course_id FOREIGN KEY (Course_ID) REFERENCES course (Course_ID),\n    CONSTRAINT fk_course_arrange_teacher_id FOREIGN KEY (Teacher_ID) REFERENCES teacher (Teacher_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the name of teachers aged either 32 or 33?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "course_teach/course_teach.sqlite", "gold_sql": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of high schoolers who have likes, and how many likes does each have?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['fiat', 'amc', 'volkswagen']\n    FullName text, -- example: ['Fiat', 'American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['fiat', 'amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['fiat', 'chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the total number of airlines?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT count(*) FROM AIRLINES", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the weekly rank for the episode \"A Love of a Lifetime\"?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the arrival date and the departure date for all the dogs.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT date_arrived ,  date_departed FROM Dogs", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich airlines have at least 10 flights?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow paragraph details for paragraph with text 'Korea ' .\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "select other_details from paragraphs where paragraph_text like 'korea'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the model of the car with the smallest amount of horsepower?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the template ids with template type description \"Presentation\".\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the minimum grade of students who have no friends.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['North America', 'Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich model of the car has the minimum horsepower?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['Asia', 'North America']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich African countries have a smaller population than that of any country in Asia?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich professional did not operate any treatment on dogs? List the professional's id, role and email.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Ha', 'Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['Australian Open', 'WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the name of the winner who has the highest rank points and participated in the Australian Open tourney.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the name of the employee who got the highest one time bonus.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the id of the document with the fewest paragraphs.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Kyle', 'Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the names of all of the high schooler Kyle's friends.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the lowest version number, along with its corresponding template type code.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the largest amount of horsepower for the models with 3 cylinders and what make is it?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many car models were produced by the maker with full name American Motor Company?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the country with the most number of TV Channels and how many does it have?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the first name, last name and email of the owners living in a state whose name contains the substring 'North'.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the lowest grade of students who do not have any friends?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Ireland', 'Brazil', 'Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the document id with paragraph text 'Brazil' and 'Ireland'.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the population, name and leader of the country with the largest area?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are different nationalities of people and the corresponding number of people from each nation?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many different store locations are there?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT count(DISTINCT LOCATION) FROM shop", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWho is the first student to register? List the first name, middle name and last name.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the major and age of students who do not have a cat pet.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the date and id of the transcript with at least 2 course results.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the average weight and year for each year?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many different degree names are offered?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of poker players?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many singers are there?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT count(*) FROM singer", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the first, middle, and last name of the earliest school graduate?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the abbreviation and country of the airline that has fewest number of flights?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['US', 'AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the total number of languages used in Aruba?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many flights arriving in Aberdeen city?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['ds', 'math']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nwhat are all the addresses including line 1 and line 2?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT line_1 ,  line_2 FROM addresses", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the average weight for each pet type.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the average and maximum age for each pet type?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the count of singers?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT count(*) FROM singer", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the names of singers that have more than one song.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the year that had the most concerts?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Angola', 'Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Angola', 'Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the region and population of Angola?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the make and production time of the cars that were produced in the earliest year?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the ids and names of each document, as well as the number of paragraphs in each?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the ids of documents that have 2 or more paragraphs?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the first name of every student who has a dog but does not have a cat?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList all airline names and their abbreviations in \"USA\".\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the name, population, and life expectancy of the largest Asian country by land?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the total number of players.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT count(*) FROM players", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the manager name and district of the shop that sells the largest number of products?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the name of the series that has the episode \"A Love of a Lifetime\"?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['ASY', 'AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many 'United Airlines' flights go to Airport 'ASY'?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Ha', 'Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nfind the code of the country where has the greatest number of players.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Joseph Kuhr', 'Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the number of cartoones written by Joseph Kuhr?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Gelderland', 'Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many people live in Gelderland district?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of all European countries with at least 3 manufacturers?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Student (\n    StuID number, -- student id, example: [1001, 1002]\n    LName text, -- last name, example: ['Smith', 'Kim']\n    Fname text, -- first name, example: ['Linda', 'Tracy']\n    Age number, -- example: [18, 19]\n    Sex text, -- example: ['F', 'M']\n    Major number, -- example: [600, 520]\n    Advisor number, -- example: [1121, 7712]\n    city_code text, -- example: ['BAL', 'HKG']\n    PRIMARY KEY (StuID)\n);\n\nCREATE TABLE Has_Pet (\n    StuID number, -- student id, example: [1001, 1002]\n    PetID number, -- example: [2001, 2002]\n    CONSTRAINT fk_has_pet_stuid FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    CONSTRAINT fk_has_pet_petid FOREIGN KEY (PetID) REFERENCES Pets (PetID)\n);\n\nCREATE TABLE Pets (\n    PetID number, -- example: [2001, 2002]\n    PetType text, -- example: ['cat', 'dog']\n    pet_age number, -- example: [3, 2]\n    weight number, -- example: [12.0, 13.4]\n    PRIMARY KEY (PetID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the first name and age of students who have a pet.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "pets_1/pets_1.sqlite", "gold_sql": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Chinese', 'Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the number of distinct continents where Chinese is spoken?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many shops are there in each location?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nPlease show the name of the conductor that has conducted orchestras founded after 2008.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the Episode of all TV series sorted by rating.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT Episode FROM TV_series ORDER BY rating", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the number of all matches who played in years of 2013 or 2016.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of conductors who have conducted orchestras founded after the year 2008?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Kyle', 'Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the grade for the high schooler named Kyle.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Won', 'Ha', 'Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the name of the winner who has won the most matches, and how many rank points does this player have?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Wisconsin', 'Hawaii', 'Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the number of high schoolers for each grade.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the type codes and descriptions for all template types?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Anthony ', 'Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Anthony ', 'Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the airport code and name in the city of Anthony.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Addresses (\n    address_id number, -- example: [1, 2]\n    line_1 text, -- example: ['2294 Grant Square Apt. 235', '3999 Aufderhar Ways Suite 593']\n    line_2 text, -- example: ['Apt. 370', 'Apt. 388']\n    line_3 text,\n    city text, -- example: ['Port Chelsea', 'Lake Laishafurt']\n    zip_postcode text, -- example: ['148', '943']\n    state_province_county text, -- example: ['Virginia', 'Kentucky']\n    country text, -- example: ['Iceland', 'Burundi']\n    other_address_details text,\n    PRIMARY KEY (address_id)\n);\n\nCREATE TABLE Courses (\n    course_id number, -- example: [1, 2]\n    course_name text, -- example: ['math', 'ds']\n    course_description text, -- example: ['p', 'q']\n    other_details text,\n    PRIMARY KEY (course_id)\n);\n\nCREATE TABLE Departments (\n    department_id number, -- example: [1, 2]\n    department_name text, -- example: ['math', 'computer science', 'history']\n    department_description text, -- example: ['error', 'nostrum']\n    other_details text,\n    PRIMARY KEY (department_id)\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id number, -- example: [1, 2]\n    department_id number, -- example: [13, 2]\n    degree_summary_name text, -- example: ['Master', 'Bachelor']\n    degree_summary_description text, -- example: ['architecto', 'cumque']\n    other_details text,\n    PRIMARY KEY (degree_program_id),\n    CONSTRAINT fk_degree_programs_department_id FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\n\nCREATE TABLE Sections (\n    section_id number, -- example: [1, 2]\n    course_id number, -- example: [9, 2]\n    section_name text, -- example: ['a', 'b']\n    section_description text, -- example: ['non', 'voluptatem']\n    other_details text,\n    PRIMARY KEY (section_id),\n    CONSTRAINT fk_sections_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id number, -- example: [1, 2]\n    semester_name text, -- example: ['spring 2010', 'summer 2010']\n    semester_description text, -- example: ['x', 'g']\n    other_details text,\n    PRIMARY KEY (semester_id)\n);\n\nCREATE TABLE Students (\n    student_id number, -- example: [1, 2]\n    current_address_id number, -- example: [10, 12]\n    permanent_address_id number, -- example: [15, 5]\n    first_name text, -- example: ['Timmothy', 'Hobart']\n    middle_name text, -- example: ['Anna', 'Lorenz']\n    last_name text, -- example: ['Ward', 'Balistreri']\n    cell_mobile_number text, -- example: ['(096)889-8954x524', '1-009-710-5151']\n    email_address text, -- example: ['erwin.zboncak@example.com', 'swift.kolby@example.com']\n    ssn text, -- example: ['965', '304246']\n    date_first_registered time, -- example: ['1971-02-05 07:28:23', '1976-10-26 02:33:06']\n    date_left time, -- example: ['1971-05-17 19:28:49', '2013-10-05 17:41:28']\n    other_student_details text, -- example: ['quia', 'autem']\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_students_current_address_id FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    CONSTRAINT fk_students_permanent_address_id FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id number, -- example: [1, 2]\n    degree_program_id number, -- example: [12, 4]\n    semester_id number, -- example: [13, 2]\n    student_id number, -- example: [14, 9]\n    other_details text,\n    PRIMARY KEY (student_enrolment_id),\n    CONSTRAINT fk_student_enrolment_degree_program_id FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    CONSTRAINT fk_student_enrolment_semester_id FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    CONSTRAINT fk_student_enrolment_student_id FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id number, -- example: [0, 1]\n    course_id number, -- example: [6, 14]\n    student_enrolment_id number, -- example: [2, 8]\n    PRIMARY KEY (student_course_id),\n    CONSTRAINT fk_student_enrolment_courses_course_id FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    CONSTRAINT fk_student_enrolment_courses_student_enrolment_id FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id number, -- example: [1, 2]\n    transcript_date time, -- example: ['1988-04-30 01:19:47', '1975-10-28 15:16:51']\n    other_details text,\n    PRIMARY KEY (transcript_id)\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id number, -- example: [0, 96]\n    transcript_id number, -- example: [2, 8]\n    CONSTRAINT fk_transcript_contents_student_course_id FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    CONSTRAINT fk_transcript_contents_transcript_id FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the descriptions for all the math courses?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "student_transcripts_tracking/student_transcripts_tracking.sqlite", "gold_sql": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the version number and template type code for the template with version number later than 5?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many models does each car maker produce? List maker full name, id and the number.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE museum (\n    Museum_ID number, -- example: [1, 2]\n    Name text, -- example: ['Plaza Museum', 'Capital Plaza Museum']\n    Num_of_Staff number, -- example: [62, 25]\n    Open_Year text, -- example: ['2000', '2012']\n    PRIMARY KEY (Museum_ID)\n);\n\nCREATE TABLE visitor (\n    ID number, -- customer id, example: [1, 2]\n    Name text, -- example: ['Gonzalo Higuaín ', 'Guti Midfielder']\n    Level_of_membership number, -- example: [8, 5]\n    Age number, -- example: [35, 28]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE visit (\n    Museum_ID number, -- example: [1, 2]\n    visitor_ID text, -- customer id, example: ['5', '3']\n    Num_of_Ticket number, -- example: [20, 4]\n    Total_spent number, -- example: [320.14, 89.98]\n    PRIMARY KEY (Museum_ID),\n    CONSTRAINT fk_visit_museum_id FOREIGN KEY (Museum_ID) REFERENCES museum (Museum_ID),\n    CONSTRAINT fk_visit_visitor_id FOREIGN KEY (visitor_ID) REFERENCES visitor (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the name and age of the visitor who bought the most tickets at once.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "museum_visit/museum_visit.sqlite", "gold_sql": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the name of singers that do not have any song.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow ids for all templates that are used by more than one document.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Ireland', 'Brazil', 'Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['Asia', 'North America']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the total population and maximum GNP in Asia?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the names of stores whose number products is more than the average number of products.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich city has most number of arriving flights?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the number of owners who do not own any dogs at this moment.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the names of the 3 most populated countries.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the different descriptions for templates that have been used in a document.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the names of conductors that have conducted more than one orchestras.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich year has most number of concerts?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the first name and country code of the oldest player.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the name of the conductor that has conducted the most number of orchestras.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Independence', 'Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Ha', 'Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nGive the name, year of independence, and surface area of the country that has the lowest population.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are all distinct countries where singers above age 20 are from?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "SELECT DISTINCT country FROM singer WHERE age  >  20", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE players (\n    player_id number, -- example: [200001, 200002]\n    first_name text, -- example: ['Martina', 'Mirjana']\n    last_name text, -- example: ['Hingis', 'Lucic']\n    hand text, -- example: ['R', 'L']\n    birth_date time, -- example: [19800930, 19820309]\n    country_code text, -- example: ['SUI', 'CRO']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE matches (\n    best_of number, -- example: [3]\n    draw_size number, -- example: [4, 32]\n    loser_age number, -- example: [24.626967830300003, 23.6221765914]\n    loser_entry text,\n    loser_hand text, -- example: ['R', 'L']\n    loser_ht number, -- example: [170, 183]\n    loser_id number, -- example: [201474, 201520]\n    loser_ioc text, -- example: ['POL', 'CZE']\n    loser_name text, -- example: ['Agnieszka Radwanska', 'Petra Kvitova']\n    loser_rank number, -- example: [4, 6]\n    loser_rank_points number, -- example: [5890, 4370]\n    loser_seed number, -- example: [3, 5]\n    match_num number, -- example: [297, 296]\n    minutes number, -- example: [82, 72]\n    round text, -- example: ['RR', 'SF']\n    score text, -- example: ['6-2 6-4', '6-2 6-3']\n    surface text, -- example: ['Hard', 'Clay']\n    tourney_date time, -- example: [20131021, 20160104]\n    tourney_id text, -- example: ['2013-W-WT-TUR-01A-2013', '2016-1049']\n    tourney_level text, -- example: ['W', 'I']\n    tourney_name text, -- example: ['WTA Championships', 'Auckland']\n    winner_age number, -- example: [32.0684462697, 23.6221765914]\n    winner_entry text,\n    winner_hand text, -- example: ['R', 'L']\n    winner_ht number, -- example: [175, 183]\n    winner_id number, -- example: [200033, 201520]\n    winner_ioc text, -- example: ['USA', 'CZE']\n    winner_name text, -- example: ['Serena Williams', 'Petra Kvitova']\n    winner_rank number, -- example: [1, 6]\n    winner_rank_points number, -- example: [12040, 4370]\n    winner_seed number, -- example: [1, 5]\n    `year` number, -- example: [2013, 2016]\n    CONSTRAINT fk_matches_loser_id FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    CONSTRAINT fk_matches_winner_id FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date time, -- example: [20000101, 20000103]\n    ranking number, -- example: [3, 4]\n    player_id number, -- example: [200748, 200033]\n    ranking_points number, -- example: [4378, 3021]\n    tours number, -- example: [13, 15]\n    CONSTRAINT fk_rankings_player_id FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the average rank of winners in all matches.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "wta_1/wta_1.sqlite", "gold_sql": "SELECT avg(winner_rank) FROM matches", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['APG', 'AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are flight numbers of flights departing from Airport \"APG\"?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the produdction code and channel of the most recent cartoon ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "select production_code ,  channel from cartoon order by original_air_date desc limit 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the average and maximum capacities for all stadiums ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "select avg(capacity) ,  max(capacity) from stadium", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of the singers whose birth years are either 1948 or 1949?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Kyle', 'Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nCount the number of friends Kyle has.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the number of car models that are produced by each maker and what is the id and full name of each maker?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Liliane Bettencourt', 'Christy Walton']\n    Birth_Year number, -- example: [1944.0, 1948.0]\n    Net_Worth_Millions number, -- example: [30.0, 28.8]\n    Citizenship text, -- example: ['France', 'United States']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE song (\n    Song_ID number, -- example: [1, 2]\n    Title text, -- example: [\"Do They Know It's Christmas\", \"F**k It (I Don't Want You Back)\"]\n    Singer_ID number, -- example: [1, 2]\n    Sales number, -- example: [1094000.0, 552407.0]\n    Highest_Position number, -- example: [1.0, 3.0]\n    PRIMARY KEY (Song_ID),\n    CONSTRAINT fk_song_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of the singers who are not French citizens?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "singer/singer.sqlite", "gold_sql": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the average age of the dogs who have gone through any treatments?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the major record formats of orchestras, sorted by their frequency?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE course (\n    Course_ID number, -- example: [1, 2]\n    Staring_Date text, -- example: ['5 May', '6 May']\n    Course text, -- example: ['Language Arts', 'Math']\n    PRIMARY KEY (Course_ID)\n);\n\nCREATE TABLE teacher (\n    Teacher_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joseph Huts', 'Gustaaf Deloor']\n    Age text, -- example: ['32', '29']\n    Hometown text, -- example: ['Blackrod Urban District', 'Bolton County Borough']\n    PRIMARY KEY (Teacher_ID)\n);\n\nCREATE TABLE course_arrange (\n    Course_ID number, -- example: [2, 3]\n    Teacher_ID number, -- example: [5, 3]\n    Grade number, -- example: [1, 3]\n    PRIMARY KEY (Course_ID),\n    CONSTRAINT fk_course_arrange_course_id FOREIGN KEY (Course_ID) REFERENCES course (Course_ID),\n    CONSTRAINT fk_course_arrange_teacher_id FOREIGN KEY (Teacher_ID) REFERENCES teacher (Teacher_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of the teachers who teach at least two courses?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "course_teach/course_teach.sqlite", "gold_sql": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich grade has the most high schoolers?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE airlines (\n    uid number, -- airline id, example: [1, 2]\n    Airline text, -- airline name, example: ['United Airlines', 'US Airways']\n    Abbreviation text, -- example: ['UAL', 'USAir']\n    Country text, -- example: ['USA']\n    PRIMARY KEY (uid)\n);\n\nCREATE TABLE airports (\n    City text, -- example: ['Aberdeen ', 'Abilene ']\n    AirportCode text, -- example: ['AAF', 'ABI']\n    AirportName text, -- example: ['Phillips AAF ', 'Municipal ']\n    Country text, -- example: ['United States ']\n    CountryAbbrev text, -- example: ['US ', 'US']\n    PRIMARY KEY (AirportCode)\n);\n\nCREATE TABLE flights (\n    Airline number, -- example: [1, 2]\n    FlightNo number, -- flight number, example: [28, 29]\n    SourceAirport text, -- example: [' APG', ' ASY']\n    DestAirport text, -- destination airport, example: [' ASY', ' APG']\n    PRIMARY KEY (Airline),\n    CONSTRAINT fk_flights_sourceairport FOREIGN KEY (SourceAirport) REFERENCES airports (AirportCode),\n    CONSTRAINT fk_flights_destairport FOREIGN KEY (DestAirport) REFERENCES airports (AirportCode)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the number of flights landing in the city of Aberdeen or Abilene.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "flight_2/flight_2.sqlite", "gold_sql": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE TV_Channel (\n    id text, -- example: ['700', '701']\n    series_name text, -- example: ['Sky Radio', 'Sky Music']\n    Country text, -- example: ['Italy', 'United Kingdom']\n    `Language` text, -- example: ['Italian', 'English']\n    Content text, -- example: ['music']\n    Pixel_aspect_ratio_PAR text, -- example: ['4:3', '4:3 / 16:9']\n    Hight_definition_TV text, -- example: ['no', 'yes']\n    Pay_per_view_PPV text, -- example: ['no']\n    Package_Option text, -- example: ['Sky Famiglia', 'no ( FTV )']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE TV_series (\n    id number, -- example: [1.0, 2.0]\n    Episode text, -- example: ['A Love of a Lifetime', 'Friendly Skies']\n    Air_Date text, -- example: ['September 24, 2007', 'October 1, 2007']\n    Rating text, -- example: ['5.8', '5.3']\n    Share number, -- example: [9.0, 7.0]\n    18_49_Rating_Share text, -- example: ['3.5/9', '3.2/8']\n    Viewers_m text, -- example: ['9.16', '8.23']\n    Weekly_Rank number, -- example: [43.0, 50.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_tv_series_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id number, -- example: [1.0, 2.0]\n    Title text, -- example: ['The Rise of the Blue Beetle!', 'Terror on Dinosaur Island!']\n    Directed_by text, -- example: ['Ben Jones', 'Brandon Vietti']\n    Written_by text, -- example: ['Michael Jelenic', 'Steven Melching']\n    Original_air_date text, -- example: ['November14,2008', 'November21,2008']\n    Production_code number, -- example: [101.0, 102.0]\n    Channel text, -- example: ['700', '701']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_cartoon_channel FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the air date of TV series with Episode \"A Love of a Lifetime\"?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "tvshow/tvshow.sqlite", "gold_sql": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['PPT', 'AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PPT', 'PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nCount the number of documents that use the PPT template type.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nTell me the number of dogs that have not received any treatment .\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the smallest weight of the car produced with 8 cylinders on 1974 ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE course (\n    Course_ID number, -- example: [1, 2]\n    Staring_Date text, -- example: ['5 May', '6 May']\n    Course text, -- example: ['Language Arts', 'Math']\n    PRIMARY KEY (Course_ID)\n);\n\nCREATE TABLE teacher (\n    Teacher_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joseph Huts', 'Gustaaf Deloor']\n    Age text, -- example: ['32', '29']\n    Hometown text, -- example: ['Blackrod Urban District', 'Bolton County Borough']\n    PRIMARY KEY (Teacher_ID)\n);\n\nCREATE TABLE course_arrange (\n    Course_ID number, -- example: [2, 3]\n    Teacher_ID number, -- example: [5, 3]\n    Grade number, -- example: [1, 3]\n    PRIMARY KEY (Course_ID),\n    CONSTRAINT fk_course_arrange_course_id FOREIGN KEY (Course_ID) REFERENCES course (Course_ID),\n    CONSTRAINT fk_course_arrange_teacher_id FOREIGN KEY (Teacher_ID) REFERENCES teacher (Teacher_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of the teachers who are aged either 32 or 33?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "course_teach/course_teach.sqlite", "gold_sql": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['ford', 'amc', 'volkswagen']\n    FullName text, -- example: ['Ford Motor Company', 'American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['ford', 'amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['ford', 'chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the email, cell phone and home phone of all the professionals.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nList the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nHow many cars have more than 4 cylinders?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE course (\n    Course_ID number, -- example: [1, 2]\n    Staring_Date text, -- example: ['5 May', '6 May']\n    Course text, -- example: ['Language Arts', 'Math']\n    PRIMARY KEY (Course_ID)\n);\n\nCREATE TABLE teacher (\n    Teacher_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joseph Huts', 'Gustaaf Deloor']\n    Age text, -- example: ['32', '29']\n    Hometown text, -- example: ['Blackrod Urban District', 'Bolton County Borough']\n    PRIMARY KEY (Teacher_ID)\n);\n\nCREATE TABLE course_arrange (\n    Course_ID number, -- example: [2, 3]\n    Teacher_ID number, -- example: [5, 3]\n    Grade number, -- example: [1, 3]\n    PRIMARY KEY (Course_ID),\n    CONSTRAINT fk_course_arrange_course_id FOREIGN KEY (Course_ID) REFERENCES course (Course_ID),\n    CONSTRAINT fk_course_arrange_teacher_id FOREIGN KEY (Teacher_ID) REFERENCES teacher (Teacher_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow names of teachers and the courses they are arranged to teach.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "course_teach/course_teach.sqlite", "gold_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE stadium (\n    Stadium_ID number, -- example: [1, 2]\n    Location text, -- example: ['Raith Rovers', 'Ayr United']\n    Name text, -- example: [\"Stark's Park\", 'Somerset Park']\n    Capacity number, -- example: [10104, 11998]\n    Highest number, -- example: [4812, 2363]\n    Lowest number, -- example: [1294, 1057]\n    Average number, -- example: [2106, 1477]\n    PRIMARY KEY (Stadium_ID)\n);\n\nCREATE TABLE singer (\n    Singer_ID number, -- example: [1, 2]\n    Name text, -- example: ['Joe Sharp', 'Timbaland']\n    Country text, -- example: ['Netherlands', 'United States']\n    Song_Name text, -- example: ['You', 'Dangerous']\n    Song_release_year text, -- example: ['1992', '2008']\n    Age number, -- example: [52, 32]\n    Is_male others, -- example: ['F', 'T']\n    PRIMARY KEY (Singer_ID)\n);\n\nCREATE TABLE concert (\n    concert_ID number, -- example: [1, 2]\n    concert_Name text, -- example: ['Auditions', 'Super bootcamp']\n    Theme text, -- example: ['Free choice', 'Free choice 2']\n    Stadium_ID text, -- example: ['1', '2']\n    `Year` text, -- example: ['2014', '2015']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_concert_stadium_id FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID number, -- example: [1, 2]\n    Singer_ID text, -- example: ['2', '3']\n    PRIMARY KEY (concert_ID),\n    CONSTRAINT fk_singer_in_concert_concert_id FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    CONSTRAINT fk_singer_in_concert_singer_id FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of all stadiums that did not have a concert in 2014?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "concert_singer/concert_singer.sqlite", "gold_sql": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Highschooler (\n    ID number, -- example: [1025, 1101]\n    name text, -- example: ['Kyle', 'Jordan', 'Gabriel']\n    grade number, -- example: [9, 10]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE Friend (\n    student_id number, -- example: [1101, 1247]\n    friend_id number, -- example: [1381, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_friend_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_friend_friend_id FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id number, -- example: [1025, 1247]\n    liked_id number, -- example: [1709, 1689]\n    PRIMARY KEY (student_id),\n    CONSTRAINT fk_likes_student_id FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    CONSTRAINT fk_likes_liked_id FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the number of likes that the high schooler named Kyle has.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "network_1/network_1.sqlite", "gold_sql": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE AREA_CODE_STATE (\n    area_code number, -- example: [201, 202]\n    state text, -- example: ['CA', 'NY', 'NJ', 'DC']\n    PRIMARY KEY (area_code)\n);\n\nCREATE TABLE CONTESTANTS (\n    contestant_number number, -- example: [1, 2]\n    contestant_name text, -- example: ['Edwina Burnam', 'Tabatha Gehling']\n    PRIMARY KEY (contestant_number)\n);\n\nCREATE TABLE VOTES (\n    vote_id number, -- example: [5, 3]\n    phone_number number, -- example: [5112677315, 6209222712]\n    state text, -- example: ['CA', 'NY']\n    contestant_number number, -- example: [2, 3]\n    created time, -- example: ['2018-03-09 19:03:21', '2018-03-09 19:03:36']\n    PRIMARY KEY (vote_id),\n    CONSTRAINT fk_votes_state FOREIGN KEY (state) REFERENCES AREA_CODE_STATE (state),\n    CONSTRAINT fk_votes_contestant_number FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS (contestant_number)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the number of votes from state 'NY' or 'CA'?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "voter_1/voter_1.sqlite", "gold_sql": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich professionals live in a city containing the substring 'West'? List his or her role, street, city and state.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the model of the car whose weight is below the average weight.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nTell me the age of the oldest dog.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "SELECT max(age) FROM Dogs", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Feature_Types (\n    feature_type_code text, -- example: ['Amenity', 'Security']\n    feature_type_name text, -- example: ['Amenity, eg Pool.', 'Securiyt, eg Burglar Alarm.']\n    PRIMARY KEY (feature_type_code)\n);\n\nCREATE TABLE Ref_Property_Types (\n    property_type_code text, -- example: ['Apartment', 'Field']\n    property_type_description text, -- example: ['House, Bungalow, etc.', 'Apartment, Flat, Condo, etc.']\n    PRIMARY KEY (property_type_code)\n);\n\nCREATE TABLE Other_Available_Features (\n    feature_id number, -- example: [2, 3]\n    feature_type_code text, -- example: ['Amenity', 'Security']\n    feature_name text, -- example: ['AirCon', 'Pool']\n    feature_description text, -- example: ['Air Conditioning.', 'Swimming Pool.']\n    PRIMARY KEY (feature_id),\n    CONSTRAINT fk_other_available_features_feature_type_code FOREIGN KEY (feature_type_code) REFERENCES Ref_Feature_Types (feature_type_code)\n);\n\nCREATE TABLE Properties (\n    property_id number, -- example: [1, 2]\n    property_type_code text, -- example: ['House', 'Other']\n    date_on_market time, -- example: ['1991-06-21 23:52:10', '1990-05-25 23:01:51']\n    date_sold time, -- example: ['1979-05-13 16:58:06', '1990-11-14 19:16:38']\n    property_name text, -- example: ['park', 'the cole']\n    property_address text, -- example: ['4745 Emerson Stravenue Suite 829\\nSouth G', '098 Tremaine Highway Suite 569\\nSouth Wil']\n    room_count number, -- example: [7, 1]\n    vendor_requested_price number, -- example: [372652.2909, 661536468.4429]\n    buyer_offered_price number, -- example: [1.68, 8.7122]\n    agreed_selling_price number, -- example: [4201.8, 21769471.8328]\n    apt_feature_1 text, -- example: ['aut', 'est']\n    apt_feature_2 text, -- example: ['suscipit', 'est']\n    apt_feature_3 text,\n    fld_feature_1 text,\n    fld_feature_2 text,\n    fld_feature_3 text,\n    hse_feature_1 text,\n    hse_feature_2 text,\n    hse_feature_3 text,\n    oth_feature_1 text,\n    oth_feature_2 text,\n    oth_feature_3 text,\n    shp_feature_1 text,\n    shp_feature_2 text,\n    shp_feature_3 text,\n    other_property_details text,\n    PRIMARY KEY (property_id),\n    CONSTRAINT fk_properties_property_type_code FOREIGN KEY (property_type_code) REFERENCES Ref_Property_Types (property_type_code)\n);\n\nCREATE TABLE Other_Property_Features (\n    property_id number, -- example: [15, 12]\n    feature_id number, -- example: [3, 4]\n    property_feature_description text, -- example: ['dolorem', 'earum']\n    CONSTRAINT fk_other_property_features_property_id FOREIGN KEY (property_id) REFERENCES Properties (property_id),\n    CONSTRAINT fk_other_property_features_feature_id FOREIGN KEY (feature_id) REFERENCES Other_Available_Features (feature_id)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nShow the property type descriptions of properties belonging to that code.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "real_estate_properties/real_estate_properties.sqlite", "gold_sql": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Breeds (\n    breed_code text, -- example: ['BUL', 'ESK']\n    breed_name text, -- example: ['Eskimo', 'Husky']\n    PRIMARY KEY (breed_code)\n);\n\nCREATE TABLE Charges (\n    charge_id number, -- example: [1, 2]\n    charge_type text, -- example: ['Daily Accommodation', 'Drugs']\n    charge_amount number, -- example: [98, 322]\n    PRIMARY KEY (charge_id)\n);\n\nCREATE TABLE Sizes (\n    size_code text, -- example: ['LGE', 'MED']\n    size_description text, -- example: ['Small', 'Medium']\n    PRIMARY KEY (size_code)\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code text, -- example: ['EXAM', 'VAC']\n    treatment_type_description text, -- example: ['Physical examination', 'Vaccination']\n    PRIMARY KEY (treatment_type_code)\n);\n\nCREATE TABLE Owners (\n    owner_id number, -- example: [1, 2]\n    first_name text, -- example: ['Nora', 'Melisa']\n    last_name text, -- example: ['Haley', 'DuBuque']\n    street text, -- example: ['0647 Hintz Village Apt. 024', '1204 Mae Highway Apt. 107']\n    city text, -- example: ['Lake Tia', 'Port Reannamouth']\n    state text, -- example: ['Wisconsin', 'Virginia']\n    zip_code text, -- example: ['93165', '45244']\n    email_address text, -- example: ['lynn81@example.org', 'ykris@example.com']\n    home_phone text, -- example: ['1-682-845-0116x63235', '(799)563-0260x454']\n    cell_number text, -- example: ['478.978.0729', '(722)768-5439x484']\n    PRIMARY KEY (owner_id)\n);\n\nCREATE TABLE Dogs (\n    dog_id number, -- example: [1, 2]\n    owner_id number, -- example: [3, 11]\n    abandoned_yn text, -- abandoned yes or no, example: ['1', '0']\n    breed_code text, -- example: ['ESK', 'BUL']\n    size_code text, -- example: ['LGE', 'MED']\n    name text, -- example: ['Kacey', 'Hipolito']\n    age text, -- example: ['6', '9']\n    date_of_birth time, -- example: ['2012-01-27 05:11:53', '2013-02-13 05:15:21']\n    gender text, -- example: ['1', '0']\n    weight text, -- example: ['7.57', '1.72']\n    date_arrived time, -- example: ['2017-09-08 20:10:13', '2017-12-22 05:02:02']\n    date_adopted time, -- example: ['2018-03-06 16:32:11', '2018-03-25 08:12:51']\n    date_departed time, -- example: ['2018-03-25 06:58:44', '2018-03-25 02:11:32']\n    PRIMARY KEY (dog_id),\n    CONSTRAINT fk_dogs_owner_id FOREIGN KEY (owner_id) REFERENCES Owners (owner_id),\n    CONSTRAINT fk_dogs_breed_code FOREIGN KEY (breed_code) REFERENCES Breeds (breed_code),\n    CONSTRAINT fk_dogs_size_code FOREIGN KEY (size_code) REFERENCES Sizes (size_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id number, -- example: [1, 2]\n    role_code text, -- example: ['Employee', 'Veterenarian']\n    first_name text, -- example: ['Taryn', 'Jayson']\n    street text, -- example: ['6915 Oberbrunner Point Suite 491\\nGleason', '88665 Terence Lodge Apt. 904\\nCorneliusfo']\n    city text, -- example: ['West Heidi', 'North Odellfurt']\n    state text, -- example: ['Indiana', 'Connecticut']\n    zip_code text, -- example: ['06646', '43129']\n    last_name text, -- example: ['Braun', 'Ullrich']\n    email_address text, -- example: ['deanna.schuster@example.com', 'lucile.shanahan@example.org']\n    home_phone text, -- example: ['+71(6)2898266914', '+02(1)0259033559']\n    cell_number text, -- example: ['(275)939-2435x80863', '889-940-2676']\n    PRIMARY KEY (professional_id)\n);\n\nCREATE TABLE Treatments (\n    treatment_id number, -- example: [1, 2]\n    dog_id number, -- example: [14, 4]\n    professional_id number, -- example: [9, 10]\n    treatment_type_code text, -- example: ['WALK', 'VAC']\n    date_of_treatment time, -- example: ['2018-03-19 04:39:54', '2018-03-15 20:25:34']\n    cost_of_treatment number, -- example: [567, 147]\n    PRIMARY KEY (treatment_id),\n    CONSTRAINT fk_treatments_dog_id FOREIGN KEY (dog_id) REFERENCES Dogs (dog_id),\n    CONSTRAINT fk_treatments_professional_id FOREIGN KEY (professional_id) REFERENCES Professionals (professional_id),\n    CONSTRAINT fk_treatments_treatment_type_code FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types (treatment_type_code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhich dogs have not cost their owner more than 1000 for treatment ? List the dog names .\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "dog_kennels/dog_kennels.sqlite", "gold_sql": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "select distinct year from cars_data where weight between 3000 and 4000;", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE poker_player (\n    Poker_Player_ID number, -- example: [1, 2]\n    People_ID number, -- example: [1, 2]\n    Final_Table_Made number, -- example: [42.0, 10.0]\n    Best_Finish number, -- example: [1.0, 2.0]\n    Money_Rank number, -- example: [68.0, 141.0]\n    Earnings number, -- example: [476090.0, 189233.0]\n    PRIMARY KEY (Poker_Player_ID),\n    CONSTRAINT fk_poker_player_people_id FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID number, -- example: [1, 2]\n    Nationality text, -- example: ['Russia', 'Bulgaria']\n    Name text, -- example: ['Aleksey Ostapenko', 'Teodor Salparov']\n    Birth_Date text, -- example: ['May 26, 1986', 'August 16, 1982']\n    Height number, -- example: [207.0, 182.0]\n    PRIMARY KEY (People_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of people who are not from Russia?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "poker_player/poker_player.sqlite", "gold_sql": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE conductor (\n    Conductor_ID number, -- example: [1, 2]\n    Name text, -- example: ['Antal Doráti', 'Igor Stravinsky']\n    Age number, -- example: [40, 41]\n    Nationality text, -- example: ['USA', 'UK']\n    Year_of_Work number, -- example: [10, 11]\n    PRIMARY KEY (Conductor_ID)\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID number, -- example: [1, 2]\n    Orchestra text, -- example: ['London Symphony Orchestra', 'Columbia Symphony Orchestra']\n    Conductor_ID number, -- example: [1, 2]\n    Record_Company text, -- example: ['Mercury Records', 'Columbia Masterworks']\n    Year_of_Founded number, -- example: [2003.0, 2009.0]\n    Major_Record_Format text, -- example: ['CD', 'CD / LP']\n    PRIMARY KEY (Orchestra_ID),\n    CONSTRAINT fk_orchestra_conductor_id FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID number, -- example: [1, 2]\n    Orchestra_ID number, -- example: [1, 2]\n    Type text, -- example: ['Auditions 1', 'Auditions 2']\n    `Date` text, -- example: ['9 June', '10 June']\n    `Official_ratings_(millions)` number, -- example: [5.2, 6.73]\n    Weekly_rank text, -- example: ['12', '8']\n    Share text, -- example: ['22.7%', '28.0%']\n    PRIMARY KEY (Performance_ID),\n    CONSTRAINT fk_performance_orchestra_id FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID number, -- example: [1, 2]\n    Performance_ID number, -- example: [1, 2]\n    If_first_show others, -- example: ['Glebe Park', 'Fir Park']\n    Result text, -- example: ['T', 'F']\n    Attendance number, -- example: [1026.0, 695.0]\n    CONSTRAINT fk_show_performance_id FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat are the names of conductors, sorted descending by the number of years they have worked?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "orchestra/orchestra.sqlite", "gold_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE continents (\n    ContId number, -- example: [1, 2]\n    Continent text, -- example: ['america', 'europe']\n    PRIMARY KEY (ContId)\n);\n\nCREATE TABLE countries (\n    CountryId number, -- example: [1, 2]\n    CountryName text, -- example: ['usa', 'germany']\n    Continent number, -- example: [1, 2]\n    PRIMARY KEY (CountryId),\n    CONSTRAINT fk_countries_continent FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id number, -- example: [1, 2]\n    Maker text, -- example: ['amc', 'volkswagen']\n    FullName text, -- example: ['American Motor Company', 'Volkswagen']\n    Country text, -- example: ['1', '2']\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_car_makers_country FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId number, -- example: [1, 2]\n    Maker number, -- example: [1, 2]\n    Model text, -- example: ['amc', 'audi']\n    PRIMARY KEY (ModelId),\n    CONSTRAINT fk_model_list_maker FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId number, -- example: [1, 2]\n    Model text, -- example: ['chevrolet', 'buick']\n    Make text, -- example: ['chevrolet chevelle malibu', 'buick skylark 320']\n    PRIMARY KEY (MakeId),\n    CONSTRAINT fk_car_names_model FOREIGN KEY (Model) REFERENCES model_list (Model)\n);\n\nCREATE TABLE cars_data (\n    Id number, -- example: [1, 2]\n    MPG text, -- example: ['18', '15']\n    Cylinders number, -- example: [8, 4]\n    Edispl number, -- example: [307.0, 350.0]\n    Horsepower text, -- example: ['130', '165']\n    Weight number, -- example: [3504, 3693]\n    Accelerate number, -- example: [12.0, 11.5]\n    `Year` number, -- example: [1970, 1971]\n    PRIMARY KEY (Id),\n    CONSTRAINT fk_cars_data_id FOREIGN KEY (Id) REFERENCES car_names (MakeId)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the count of the car models produced in the United States?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "car_1/car_1.sqlite", "gold_sql": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['North America', 'Asia']\n    Region text, -- example: ['Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the language spoken by the largest percentage of people in each country?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE Ref_Template_Types (\n    Template_Type_Code text, -- example: ['AD', 'BK']\n    Template_Type_Description text, -- example: ['Presentation', 'CV']\n    PRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\n    Template_ID number, -- example: [0, 1]\n    Version_Number number, -- example: [5, 9]\n    Template_Type_Code text, -- example: ['PP', 'BK']\n    Date_Effective_From time, -- example: ['2005-11-12 07:09:48', '2010-09-24 01:15:11']\n    Date_Effective_To time, -- example: ['2008-01-05 14:19:28', '1999-07-08 03:31:04']\n    Template_Details text,\n    PRIMARY KEY (Template_ID),\n    CONSTRAINT fk_templates_template_type_code FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID number, -- example: [0, 1]\n    Template_ID number, -- example: [7, 25]\n    Document_Name text, -- example: ['Introduction of OS', 'Understanding DB']\n    Document_Description text, -- example: ['n', 'y']\n    Other_Details text,\n    PRIMARY KEY (Document_ID),\n    CONSTRAINT fk_documents_template_id FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID number, -- example: [7, 9]\n    Document_ID number, -- example: [2394, 3]\n    Paragraph_Text text, -- example: ['Korea', 'Somalia']\n    Other_Details text,\n    PRIMARY KEY (Paragraph_ID),\n    CONSTRAINT fk_paragraphs_document_id FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nReturn the id and type code of the template that is used for the greatest number of documents.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite", "gold_sql": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE city (\n    ID number, -- example: [129, 1]\n    Name text, -- example: ['Kabul', 'Qandahar']\n    CountryCode text, -- example: ['ABW', 'AFG']\n    District text, -- example: ['Central', 'Kabol', 'Qandahar']\n    Population number, -- example: [1780000, 237500]\n    PRIMARY KEY (ID),\n    CONSTRAINT fk_city_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name text, -- example: ['city']\n    seq text, -- example: [4079]\n);\n\nCREATE TABLE country (\n    Code text, -- example: ['ABW', 'AFG']\n    Name text, -- example: ['Aruba', 'Afghanistan']\n    Continent text, -- example: ['Africa', 'North America', 'Asia']\n    Region text, -- example: ['Central Africa', 'Caribbean', 'Southern and Central Asia']\n    SurfaceArea number, -- example: [193.0, 652090.0]\n    IndepYear number, -- indepdent year, example: [1919, 1975]\n    Population number, -- example: [103000, 22720000]\n    LifeExpectancy number, -- example: [78.4, 45.9]\n    GNP number, -- example: [828.0, 5976.0]\n    GNPOld number, -- example: [793.0, 7984.0]\n    LocalName text, -- example: ['Aruba', 'Afganistan/Afqanestan']\n    GovernmentForm text, -- example: ['Nonmetropolitan Territory of The Netherl', 'Islamic Emirate']\n    HeadOfState text, -- example: ['Beatrix', 'Mohammad Omar']\n    Capital number, -- example: [129, 1]\n    Code2 text, -- example: ['AW', 'AF']\n    PRIMARY KEY (Code)\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode text, -- example: ['ABW', 'AFG']\n    `Language` text, -- example: ['Dutch', 'English']\n    IsOfficial text, -- example: ['T', 'F']\n    Percentage number, -- example: [5.3, 9.5]\n    PRIMARY KEY (CountryCode),\n    CONSTRAINT fk_countrylanguage_countrycode FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nWhat is the average expected life expectancy for countries in the region of Central Africa?\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "world_1/world_1.sqlite", "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE employee (\n    Employee_ID number, -- example: [1, 2]\n    Name text, -- example: ['George Chuter', 'Lee Mears']\n    Age number, -- example: [23, 29]\n    City text, -- example: ['Bristol', 'Bath']\n    PRIMARY KEY (Employee_ID)\n);\n\nCREATE TABLE shop (\n    Shop_ID number, -- example: [1, 2]\n    Name text, -- example: ['FC Haka', 'HJK']\n    Location text, -- example: ['Valkeakoski', 'Helsinki']\n    District text, -- example: ['Tehtaan kenttä', 'Finnair Stadium']\n    Number_products number, -- example: [3516, 10770]\n    Manager_name text, -- example: ['Olli Huttunen', 'Antti Muurinen']\n    PRIMARY KEY (Shop_ID)\n);\n\nCREATE TABLE hiring (\n    Shop_ID number, -- example: [1, 8]\n    Employee_ID number, -- example: [1, 2]\n    Start_from text, -- example: ['2009', '2003']\n    Is_full_time others, -- example: ['T', 'F']\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_hiring_shop_id FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    CONSTRAINT fk_hiring_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID text, -- example: ['1', '10']\n    Year_awarded text, -- example: ['2011', '2016']\n    Bonus number, -- example: [3000.0, 3200.0]\n    PRIMARY KEY (Employee_ID),\n    CONSTRAINT fk_evaluation_employee_id FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the number of shops in each location.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "employee_hire_evaluation/employee_hire_evaluation.sqlite", "gold_sql": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "cmp_method": "spider"}}}
{"data_source": "sql", "prompt": [{"role": "user", "content": "Task Overview:\nYou are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.\n\nDatabase Engine:\nSQLite\n\nDatabase Schema:\nCREATE TABLE museum (\n    Museum_ID number, -- example: [1, 2]\n    Name text, -- example: ['Plaza Museum', 'Capital Plaza Museum']\n    Num_of_Staff number, -- example: [62, 25]\n    Open_Year text, -- example: ['2000', '2012']\n    PRIMARY KEY (Museum_ID)\n);\n\nCREATE TABLE visitor (\n    ID number, -- customer id, example: [1, 2]\n    Name text, -- example: ['Gonzalo Higuaín ', 'Guti Midfielder']\n    Level_of_membership number, -- example: [8, 5]\n    Age number, -- example: [35, 28]\n    PRIMARY KEY (ID)\n);\n\nCREATE TABLE visit (\n    Museum_ID number, -- example: [1, 2]\n    visitor_ID text, -- customer id, example: ['5', '3']\n    Num_of_Ticket number, -- example: [20, 4]\n    Total_spent number, -- example: [320.14, 89.98]\n    PRIMARY KEY (Museum_ID),\n    CONSTRAINT fk_visit_museum_id FOREIGN KEY (Museum_ID) REFERENCES museum (Museum_ID),\n    CONSTRAINT fk_visit_visitor_id FOREIGN KEY (visitor_ID) REFERENCES visitor (ID)\n);\nThis schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.\n\nQuestion:\nFind the number of visitors who did not visit any museum opened after 2010.\n\nInstructions:\n- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.\n- The generated query should return all of the information asked in the question without any missing or extra information.\n- Before generating the final SQL query, please think through the steps of how to write the query.\n\nOutput Format:\nIn your answer, please enclose the generated SQL query in a code block:\n```sql\n-- Your SQL query\n```\n\nTake a deep breath and think step by step to find the correct SQL query.\n"}], "reward_model": {"style": "rule", "ground_truth": {"db_id": "museum_visit/museum_visit.sqlite", "gold_sql": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "cmp_method": "spider"}}}
